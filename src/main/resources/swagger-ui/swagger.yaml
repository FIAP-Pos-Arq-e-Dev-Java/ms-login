openapi: 3.0.3
info:
  title: API de Autenticação
  version: 1.0.0

tags:
  - name: Login
    description: Endpoints relacionados à autenticação

paths:
  /auth/login:
    get:
      tags:
        - Login
      operationId: AuthStatus
      summary: Consulta login por usuário
      parameters:
        - name: usuario
          in: query
          description: usuario
          required: true
          schema:
            type: string
            example: "fulano"
      responses:
        '200':
          description: Consulta realizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthStatus'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Login
      summary: Realizar login
      operationId: AuthLogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLogin'
      responses:
        '200':
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthLoginResponse'
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalidCredentials:
                  summary: Usuário ou senha incorretos
                  value:
                    timestamp: "2025-05-14T15:42:00Z"
                    status: 401
                    error: "Unauthorized"
                    message: "Usuário ou senha inválidos"
                    path: "/auth/login"
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/registration:
    post:
      tags:
        - Login
      summary: Criar login de usuário
      operationId: AuthRegister
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRegister'
      responses:
        '201':
          description: Login criado com sucesso
        '400':
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Usuário ou documento já existente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /login/{usuario}:
    patch:
      tags:
        - Login
      summary: Atualizar senha de usuário
      operationId: UpdatePassword
      parameters:
        - name: usuario
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
      responses:
        '200':
          description: Senha atualizada com sucesso
        '400':
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Senha antiga incorreta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Login
      summary: Deletar login de usuário
      operationId: DeleteLogin
      parameters:
        - name: usuario
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Login deletado com sucesso (sem conteúdo)
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    AuthRegister:
      type: object
      required:
        - usuario
        - senha
        - documento
      properties:
        usuario:
          type: string
          example: "fulano"
        senha:
          type: string
          example: "senha123"
        documento:
          type: string
          example: "12312312332"

    AuthLogin:
      type: object
      required:
        - usuario
        - senha
      properties:
        usuario:
          type: string
          example: "fulano"
        senha:
          type: string
          example: "senha123"

    AuthLoginResponse:
      type: object
      properties:
        usuario:
          type: string
          example: fulano
        tipoUsuario:
          type: string
          example: "cliente"

    AuthStatus:
      type: object
      properties:
        usuario:
          type: string
          example: fulano
        status:
          type: string
          example: "ativo"

    UpdatePassword:
      type: object
      required:
        - senhaAntiga
        - senhaNova
      properties:
        senhaAntiga:
          type: string
          example: "senhaAntiga123"
        senhaNova:
          type: string
          example: "senhaNova123"

    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2025-05-14T15:42:00Z"
        status:
          type: integer
          example: 404
        error:
          type: string
          example: "Not Found"
        message:
          type: string
          example: "Usuário não encontrado"
        path:
          type: string
          example: "/auth/login"